// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/UserRepo.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace UserServices {
  /// <summary>
  /// Definicion de la estructura de Servicio UserRepo.
  /// </summary>
  public static partial class UserRepo
  {
    static readonly string __ServiceName = "Users.UserRepo";

    static readonly grpc::Marshaller<global::UserServices.User> __Marshaller_Users_User = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UserServices.User.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::UserServices.Nothing> __Marshaller_Users_Nothing = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UserServices.Nothing.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::UserServices.UserFilter> __Marshaller_Users_UserFilter = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UserServices.UserFilter.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::UserServices.Users> __Marshaller_Users_Users = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::UserServices.Users.Parser.ParseFrom);

    static readonly grpc::Method<global::UserServices.User, global::UserServices.Nothing> __Method_Add = new grpc::Method<global::UserServices.User, global::UserServices.Nothing>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Add",
        __Marshaller_Users_User,
        __Marshaller_Users_Nothing);

    static readonly grpc::Method<global::UserServices.User, global::UserServices.Nothing> __Method_Update = new grpc::Method<global::UserServices.User, global::UserServices.Nothing>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_Users_User,
        __Marshaller_Users_Nothing);

    static readonly grpc::Method<global::UserServices.UserFilter, global::UserServices.Nothing> __Method_Delete = new grpc::Method<global::UserServices.UserFilter, global::UserServices.Nothing>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_Users_UserFilter,
        __Marshaller_Users_Nothing);

    static readonly grpc::Method<global::UserServices.Nothing, global::UserServices.Users> __Method_GetAll = new grpc::Method<global::UserServices.Nothing, global::UserServices.Users>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAll",
        __Marshaller_Users_Nothing,
        __Marshaller_Users_Users);

    static readonly grpc::Method<global::UserServices.UserFilter, global::UserServices.User> __Method_GetById = new grpc::Method<global::UserServices.UserFilter, global::UserServices.User>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetById",
        __Marshaller_Users_UserFilter,
        __Marshaller_Users_User);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::UserServices.UserRepoReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for UserRepo</summary>
    public partial class UserRepoClient : grpc::ClientBase<UserRepoClient>
    {
      /// <summary>Creates a new client for UserRepo</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public UserRepoClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for UserRepo that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public UserRepoClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected UserRepoClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected UserRepoClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::UserServices.Nothing Add(global::UserServices.User request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Add(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::UserServices.Nothing Add(global::UserServices.User request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Add, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::UserServices.Nothing> AddAsync(global::UserServices.User request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::UserServices.Nothing> AddAsync(global::UserServices.User request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Add, null, options, request);
      }
      public virtual global::UserServices.Nothing Update(global::UserServices.User request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::UserServices.Nothing Update(global::UserServices.User request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::UserServices.Nothing> UpdateAsync(global::UserServices.User request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::UserServices.Nothing> UpdateAsync(global::UserServices.User request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      public virtual global::UserServices.Nothing Delete(global::UserServices.UserFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::UserServices.Nothing Delete(global::UserServices.UserFilter request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::UserServices.Nothing> DeleteAsync(global::UserServices.UserFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::UserServices.Nothing> DeleteAsync(global::UserServices.UserFilter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      public virtual global::UserServices.Users GetAll(global::UserServices.Nothing request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAll(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::UserServices.Users GetAll(global::UserServices.Nothing request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::UserServices.Users> GetAllAsync(global::UserServices.Nothing request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::UserServices.Users> GetAllAsync(global::UserServices.Nothing request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual global::UserServices.User GetById(global::UserServices.UserFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::UserServices.User GetById(global::UserServices.UserFilter request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::UserServices.User> GetByIdAsync(global::UserServices.UserFilter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::UserServices.User> GetByIdAsync(global::UserServices.UserFilter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetById, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override UserRepoClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UserRepoClient(configuration);
      }
    }

  }
}
#endregion
